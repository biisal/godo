[{"ID":1,"Title":"this is a new todo","Description":"this shoudl work","Done":false},{"ID":2,"Title":"this is another one  ","Description":"ok np this is okkkk","Done":false},{"ID":3,"Title":"this is another one  ","Description":"ok np this is okkkk\nthis is new line maaam","Done":false},{"ID":4,"Title":"this is a new todo that is good","Description":"ok this is a big description that is ok","Done":false},{"ID":5,"Title":"This is number 5 todo ","Description":"ok 5 is biggger","Done":false},{"ID":6,"Title":"this is a new todo mam","Description":"ok thats grerat todo","Done":false},{"ID":7,"Title":"ok this is number 7","Description":"ok 7","Done":false},{"ID":8,"Title":"number 8 ","Description":"ok this is a numbe 4","Done":false},{"ID":9,"Title":"Implement Advanced Notification System with Multi-Channel Support and User Preferences","Description":"The goal of this task is to design and implement a fully modular notification system for our application that can handle multiple communication channels (email, SMS, push notifications, and in-app messages) while respecting each user's delivery preferences, do-not-disturb hours, and language settings.\n\nThis includes building a scalable backend service responsible for queuing, formatting, and dispatching notifications via appropriate channels based on priority and type. The system should support templating for different message types, fallback strategies (e.g., if email fails, send SMS), and easy integration with third-party services like Twilio, SendGrid, Firebase Cloud Messaging, etc.\n\nKey components of the system:\n\n    A notification scheduler that can handle retries, exponential backoff, and time-based triggers.\n\n    A user preference model that allows users to enable/disable specific notification types or channels.\n\n    A customizable template engine that allows marketing and product teams to design notification content.\n\n    An admin dashboard to monitor delivery metrics, bounce rates, and logs.\n\n    Integration with an analytics system to measure open/click-through rates and engagement.\n\n    Localization support for delivering messages in the user's preferred language.\n\n    Ensuring compliance with regional laws like GDPR, including opt-out and consent features.\n\nAdditionally, the system must be tested for performance under high load, gracefully handle service outages, and expose a clear API for other microservices to publish events that should trigger notifications. The implementation should be modular and extensible enough to allow for future channels (e.g., WhatsApp or Slack) without significant refactoring.","Done":false},{"ID":10,"Title":"ok thij","Description":"jjjjv jdn ","Done":false}]
